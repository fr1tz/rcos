[gd_scene load_steps=4 format=1]

[ext_resource path="res://rcos/looks/prototype/theme.tres" type="Theme" id=1]
[ext_resource path="res://lsr_widgets/gamepad_widgets/config_gui/touchpad_config_gui.tscn" type="PackedScene" id=2]

[sub_resource type="GDScript" id=1]

script/source = "# Copyright Â© 2017, 2018 Michael Goldener <mg@wasted.ch>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

extends Panel

var mWidgetConfig = null

onready var mConfigurePad1Button = get_node(\"configure_pad1_button\")
onready var mConfigurePad2Button = get_node(\"configure_pad2_button\")
onready var m2PadsButton = get_node(\"2_pads_button\")
onready var mTouchpadConfigGui = get_node(\"touchpad_config_gui\")

func _ready():
	m2PadsButton.connect(\"pressed\", self, \"_num_pads_changed\")
	mConfigurePad1Button.connect(\"pressed\", self, \"configure_pad\", [0])
	mConfigurePad2Button.connect(\"pressed\", self, \"configure_pad\", [1])

func _num_pads_changed():
	if m2PadsButton.is_pressed():
		mWidgetConfig.basic_config.num_pads = 2
	else:
		mWidgetConfig.basic_config.num_pads = 1
	get_meta(\"widget_root_node\").get_main_gui().reload_widget_config()

func configure_pad(pad_idx):
	if pad_idx == 0:
		mConfigurePad1Button.set_pressed(true)
		mConfigurePad2Button.set_pressed(false)
	else:
		mConfigurePad1Button.set_pressed(false)
		mConfigurePad2Button.set_pressed(true)
	var touchpad_config = mWidgetConfig.pad_configs[pad_idx]
	mTouchpadConfigGui.load_touchpad_config(touchpad_config)

func load_widget_config(widget_config):
	mWidgetConfig = widget_config
	if mWidgetConfig.basic_config.num_pads == 1:
		mConfigurePad2Button.set_hidden(true)
		m2PadsButton.set_pressed(true)
	elif mWidgetConfig.basic_config.num_pads == 2:
		mConfigurePad2Button.set_hidden(false)
		m2PadsButton.set_pressed(false)
	configure_pad(0)

func go_back():
	return false
"

[node name="config_gui" type="Panel"]

focus/ignore_mouse = false
focus/stop_mouse = true
size_flags/horizontal = 2
size_flags/vertical = 2
theme/theme = ExtResource( 1 )
margin/left = 0.0
margin/top = 0.0
margin/right = 200.0
margin/bottom = 400.0
script/script = SubResource( 1 )

[node name="configure_pad1_button" type="Button" parent="."]

focus/ignore_mouse = false
focus/stop_mouse = true
size_flags/horizontal = 2
size_flags/vertical = 2
margin/left = 0.0
margin/top = 0.0
margin/right = 60.0
margin/bottom = 40.0
toggle_mode = true
enabled_focus_mode = 2
shortcut = null
text = "Pad 1"
flat = false

[node name="2_pads_button" type="CheckBox" parent="."]

focus/ignore_mouse = false
focus/stop_mouse = true
size_flags/horizontal = 2
size_flags/vertical = 2
margin/left = 72.0
margin/top = 0.0
margin/right = 140.0
margin/bottom = 40.0
toggle_mode = true
enabled_focus_mode = 2
shortcut = null
text = "2 Pads"
flat = false
align = 0

[node name="configure_pad2_button" type="Button" parent="."]

focus/ignore_mouse = false
focus/stop_mouse = true
size_flags/horizontal = 2
size_flags/vertical = 2
margin/left = 140.0
margin/top = 0.0
margin/right = 200.0
margin/bottom = 40.0
toggle_mode = true
enabled_focus_mode = 2
shortcut = null
text = "Pad 2"
flat = false

[node name="touchpad_config_gui" parent="." instance=ExtResource( 2 )]

margin/top = 40.0
margin/bottom = 400.0


